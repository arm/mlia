# Copyright 2021, Arm Ltd.
# SPDX-License-Identifier: Apache-2.0

[aliases]
test=pytest

[flake8]
ignore = E203, E266, E501, W503
max-line-length = 88
max-complexity = 18
select = B,C,E,F,W,T4

[pylint]
# Provide basic compatibility with black
max-line-length = 88


[pylint."MESSAGE CONTROL"]
# Provide basic compatibility with black
disable =
  all,
  # config for non-conflict with black
  # (https://black.readthedocs.io/en/stable/compatible_configs.html#pylint)
  bad-continuation,              # C0330
  bad-whitespace,                # C0326

enable =
  dangerous-default-value,       # W0102
  # black will reflow code lines, but won't touch comments, error on those
  line-too-long,                 # C0301

[tool:pytest]
testpaths=tests

[mypy]
# Suppresses error messages about imports that cannot be resolved
ignore_missing_imports = True
# Shows a warning when encountering any code inferred to be unreachable or redundant after performing type analysis
warn_unreachable = True
# Shows errors for missing return statements on some execution paths
warn_no_return = True
# Shows a warning when returning a value with type Any from a function declared with a non- Any return type
warn_return_any = True
# Warns about unneeded # type: ignore comments
warn_unused_ignores = True
# Warns about casting an expression to its inferred type
warn_redundant_casts = True
# Disallows calling functions without type annotations from functions with type annotations
disallow_untyped_calls = True
# Disallows defining functions without type annotations or with incomplete type annotations
disallow_untyped_defs = True
# Disallows defining functions with incomplete type annotations
disallow_incomplete_defs = True
# Reports an error whenever a function with type annotations is decorated with a decorator without annotations
disallow_untyped_decorators = True
# Type-checks the interior of functions without type annotations
check_untyped_defs = True
